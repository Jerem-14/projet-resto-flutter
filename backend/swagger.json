{
  "openapi": "3.0.0",
  "info": {
    "title": "API Restaurant",
    "version": "1.0.0",
    "description": "Documentation complète de l'API du projet restaurant - Authentification et Gestion du Menu."
  },
  "servers": [
    { "url": "/api" }
  ],
  "tags": [
    {
      "name": "Authentification",
      "description": "Gestion de l'inscription, connexion, profil et déconnexion utilisateur."
    },
    {
      "name": "Menu Public",
      "description": "Consultation publique du menu et des catégories."
    },
    {
      "name": "Menu Admin - Catégories",
      "description": "Gestion des catégories de menu (admin uniquement)."
    },
    {
      "name": "Menu Admin - Plats",
      "description": "Gestion des plats du menu (admin uniquement)."
    },
    {
      "name": "Système",
      "description": "Endpoints système pour la santé du serveur et la base de données."
    },
    {
      "name": "Restaurants",
      "description": "Gestion des restaurants. Seul l'administrateur peut créer, modifier ou supprimer."
    },
    {
      "name": "Plages horaires",
      "description": "Gestion des créneaux horaires pour les réservations."
    },
    {
      "name": "Disponibilités",
      "description": "Consultation des disponibilités de réservation pour les prochains jours."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Créer un compte utilisateur",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Utilisateur créé avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "409": { "description": "Email déjà utilisé" },
          "400": { "description": "Champs manquants" }
        },
        "tags": ["Authentification"]
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Connexion utilisateur",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "401": { "description": "Identifiants invalides" },
          "400": { "description": "Champs manquants" }
        },
        "tags": ["Authentification"]
      }
    },
    "/auth/profile": {
      "get": {
        "summary": "Récupérer le profil utilisateur",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Profil utilisateur",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" }
        },
        "tags": ["Authentification"]
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Déconnexion utilisateur (front)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Déconnexion effectuée côté client",
            "content": {
              "application/json": {
                "schema": { 
                  "type": "object", 
                  "properties": { 
                    "message": { "type": "string" } 
                  } 
                }
              }
            }
          }
        },
        "tags": ["Authentification"]
      }
    },
    "/menu": {
      "get": {
        "summary": "Récupérer le menu complet avec catégories et plats",
        "description": "Retourne tous les plats disponibles organisés par catégories actives",
        "responses": {
          "200": {
            "description": "Menu complet récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/MenuItemFormatted" }
                }
              }
            }
          },
          "500": { "description": "Erreur serveur lors de la récupération du menu" }
        },
        "tags": ["Menu Public"]
      }
    },
    "/menu/categories": {
      "get": {
        "summary": "Récupérer toutes les catégories actives",
        "description": "Retourne la liste des catégories de menu disponibles",
        "responses": {
          "200": {
            "description": "Catégories récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/MenuCategory" }
                }
              }
            }
          },
          "500": { "description": "Erreur serveur lors de la récupération des catégories" }
        },
        "tags": ["Menu Public"]
      }
    },
    "/menu/admin/categories": {
      "post": {
        "summary": "Créer une nouvelle catégorie",
        "description": "Permet à un administrateur de créer une nouvelle catégorie de menu",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCategoryRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Catégorie créée avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CategoryResponse" }
              }
            }
          },
          "400": { "description": "Données invalides (nom manquant ou trop long)" },
          "401": { "description": "Token manquant ou invalide" },
          "403": { "description": "Accès refusé. Droits administrateur requis." },
          "409": { "description": "Une catégorie avec ce nom existe déjà" },
          "500": { "description": "Erreur serveur lors de la création de la catégorie" }
        },
        "tags": ["Menu Admin - Catégories"]
      }
    },
    "/menu/admin/categories/{id}": {
      "patch": {
        "summary": "Modifier une catégorie existante",
        "description": "Permet à un administrateur de modifier une catégorie de menu",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "ID de la catégorie à modifier"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCategoryRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Catégorie mise à jour avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CategoryResponse" }
              }
            }
          },
          "400": { "description": "Données invalides" },
          "401": { "description": "Token manquant ou invalide" },
          "403": { "description": "Accès refusé. Droits administrateur requis." },
          "404": { "description": "Catégorie non trouvée" },
          "409": { "description": "Une autre catégorie avec ce nom existe déjà" },
          "500": { "description": "Erreur serveur lors de la mise à jour de la catégorie" }
        },
        "tags": ["Menu Admin - Catégories"]
      },
      "delete": {
        "summary": "Supprimer une catégorie",
        "description": "Permet à un administrateur de supprimer une catégorie (si elle ne contient pas de plats)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "ID de la catégorie à supprimer"
          }
        ],
        "responses": {
          "200": {
            "description": "Catégorie supprimée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Catégorie supprimée avec succès" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "403": { "description": "Accès refusé. Droits administrateur requis." },
          "404": { "description": "Catégorie non trouvée" },
          "409": { "description": "Impossible de supprimer cette catégorie car elle contient des plats" },
          "500": { "description": "Erreur serveur lors de la suppression de la catégorie" }
        },
        "tags": ["Menu Admin - Catégories"]
      }
    },
    "/menu/admin/items": {
      "post": {
        "summary": "Ajouter un nouveau plat",
        "description": "Permet à un administrateur d'ajouter un nouveau plat au menu",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateMenuItemRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Plat créé avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MenuItemResponse" }
              }
            }
          },
          "400": { "description": "Données invalides ou catégorie inactive" },
          "401": { "description": "Token manquant ou invalide" },
          "403": { "description": "Accès refusé. Droits administrateur requis." },
          "404": { "description": "Catégorie non trouvée" },
          "500": { "description": "Erreur serveur lors de la création du plat" }
        },
        "tags": ["Menu Admin - Plats"]
      }
    },
    "/menu/admin/items/{id}": {
      "patch": {
        "summary": "Modifier un plat existant",
        "description": "Permet à un administrateur de modifier un plat du menu",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "ID du plat à modifier"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateMenuItemRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plat mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MenuItemResponse" }
              }
            }
          },
          "400": { "description": "Données invalides ou catégorie inactive" },
          "401": { "description": "Token manquant ou invalide" },
          "403": { "description": "Accès refusé. Droits administrateur requis." },
          "404": { "description": "Plat ou catégorie non trouvé(e)" },
          "500": { "description": "Erreur serveur lors de la mise à jour du plat" }
        },
        "tags": ["Menu Admin - Plats"]
      },
      "delete": {
        "summary": "Supprimer un plat",
        "description": "Permet à un administrateur de supprimer un plat du menu",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "ID du plat à supprimer"
          }
        ],
        "responses": {
          "200": {
            "description": "Plat supprimé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Plat supprimé avec succès" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "403": { "description": "Accès refusé. Droits administrateur requis." },
          "404": { "description": "Plat non trouvé" },
          "500": { "description": "Erreur serveur lors de la suppression du plat" }
        },
        "tags": ["Menu Admin - Plats"]
      }
    },
    "/health": {
      "get": {
        "summary": "Vérifier l'état du serveur",
        "responses": {
          "200": {
            "description": "Serveur opérationnel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "OK" },
                    "message": { "type": "string", "example": "Backend du restaurant en cours d'exécution" },
                    "timestamp": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        },
        "tags": ["Système"]
      }
    },
    "/db/test": {
      "get": {
        "summary": "Tester la connexion à la base de données",
        "responses": {
          "200": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "message": { "type": "string", "example": "Connexion à la base de données réussie" },
                    "timestamp": { "type": "string", "format": "date-time" },
                    "database": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "dialect": { "type": "string" },
                        "host": { "type": "string" },
                        "port": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": { "description": "Erreur de connexion à la base de données" }
        },
        "tags": ["Système"]
      }
    },
    "/restaurants": {
      "get": {
        "tags": ["Restaurants"],
        "summary": "Lister tous les restaurants",
        "responses": {
          "200": {
            "description": "Liste des restaurants",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Restaurant" } }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Restaurants"],
        "summary": "Créer un restaurant (admin seulement)",
        "security": [{ "bearerAuth": [] }],
        "description": "Nécessite le rôle admin.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RestaurantCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Restaurant créé",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Restaurant" }
              }
            }
          },
          "401": { "description": "Non authentifié" },
          "403": { "description": "Accès réservé aux administrateurs" },
          "400": { "description": "Champs requis manquants" }
        }
      }
    },
    "/restaurants/{id}": {
      "get": {
        "tags": ["Restaurants"],
        "summary": "Voir un restaurant",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": {
            "description": "Détail du restaurant",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Restaurant" }
              }
            }
          },
          "404": { "description": "Restaurant non trouvé" }
        }
      },
      "patch": {
        "tags": ["Restaurants"],
        "summary": "Modifier un restaurant (admin seulement)",
        "security": [{ "bearerAuth": [] }],
        "description": "Nécessite le rôle admin.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RestaurantUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Restaurant modifié",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Restaurant" }
              }
            }
          },
          "401": { "description": "Non authentifié" },
          "403": { "description": "Accès réservé aux administrateurs" },
          "404": { "description": "Restaurant non trouvé" }
        }
      },
      "delete": {
        "tags": ["Restaurants"],
        "summary": "Supprimer un restaurant (admin seulement)",
        "security": [{ "bearerAuth": [] }],
        "description": "Nécessite le rôle admin.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Restaurant supprimé" },
          "401": { "description": "Non authentifié" },
          "403": { "description": "Accès réservé aux administrateurs" },
          "404": { "description": "Restaurant non trouvé" }
        }
      }
    },
    "/admin/timeslots": {
      "post": {
        "tags": ["Plages horaires"],
        "summary": "Créer un nouveau créneau horaire",
        "security": [{ "bearerAuth": [] }],
        "description": "Nécessite le rôle admin.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["start_time"],
                "properties": {
                  "start_time": {
                    "type": "string",
                    "format": "time",
                    "example": "19:30:00"
                  },
                  "is_active": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Créneau horaire créé",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Timeslot" }
              }
            }
          },
          "401": { "description": "Non authentifié" },
          "403": { "description": "Accès réservé aux administrateurs" },
          "400": { "description": "Données invalides" }
        }
      }
    },
    "/admin/timeslots/{id}": {
      "patch": {
        "tags": ["Plages horaires"],
        "summary": "Modifier un créneau horaire",
        "security": [{ "bearerAuth": [] }],
        "description": "Nécessite le rôle admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "string",
                    "format": "time",
                    "example": "20:00:00"
                  },
                  "is_active": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Créneau horaire modifié",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Timeslot" }
              }
            }
          },
          "401": { "description": "Non authentifié" },
          "403": { "description": "Accès réservé aux administrateurs" },
          "404": { "description": "Créneau non trouvé" }
        }
      },
      "delete": {
        "tags": ["Plages horaires"],
        "summary": "Supprimer un créneau horaire",
        "security": [{ "bearerAuth": [] }],
        "description": "Nécessite le rôle admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "description": "Créneau horaire supprimé" },
          "401": { "description": "Non authentifié" },
          "403": { "description": "Accès réservé aux administrateurs" },
          "404": { "description": "Créneau non trouvé" }
        }
      }
    },
    "/availability": {
      "get": {
        "summary": "Récupérer les disponibilités pour les 7 prochains jours",
        "description": "Retourne les créneaux horaires disponibles pour les réservations sur les 7 prochains jours, avec le nombre de places disponibles pour chaque créneau",
        "responses": {
          "200": {
            "description": "Disponibilités récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DayAvailability" }
                }
              }
            }
          },
          "404": { "description": "Aucun créneau horaire disponible" },
          "500": { "description": "Configuration du restaurant non trouvée ou erreur serveur" }
        },
        "tags": ["Disponibilités"]
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password", "first_name", "last_name"],
        "properties": {
          "email": { "type": "string", "example": "test@mail.com" },
          "password": { "type": "string", "example": "motdepasse" },
          "first_name": { "type": "string", "example": "John" },
          "last_name": { "type": "string", "example": "Doe" },
          "phone": { "type": "string", "example": "0600000000" }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string", "example": "test@mail.com" },
          "password": { "type": "string", "example": "motdepasse" }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string", "example": "jwt_token_ici" },
          "user": { "$ref": "#/components/schemas/User" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "email": { "type": "string", "example": "test@mail.com" },
          "first_name": { "type": "string", "example": "John" },
          "last_name": { "type": "string", "example": "Doe" },
          "phone": { "type": "string", "example": "0600000000" },
          "role": { "type": "string", "example": "client" }
        }
      },
      "Restaurant": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "restaurant_name": { "type": "string", "example": "Le Gourmet" },
          "total_capacity": { "type": "integer", "example": 50 },
          "phone": { "type": "string", "example": "0102030405" },
          "address": { "type": "string", "example": "1 rue de Paris, 75000 Paris" },
          "description": { "type": "string", "example": "Restaurant gastronomique" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        }
      },
      "RestaurantCreate": {
        "type": "object",
        "required": ["restaurant_name", "total_capacity", "phone", "address"],
        "properties": {
          "restaurant_name": { "type": "string", "example": "Le Gourmet" },
          "total_capacity": { "type": "integer", "example": 50 },
          "phone": { "type": "string", "example": "0102030405" },
          "address": { "type": "string", "example": "1 rue de Paris, 75000 Paris" },
          "description": { "type": "string", "example": "Restaurant gastronomique" }
        }
      },
      "RestaurantUpdate": {
        "type": "object",
        "properties": {
          "restaurant_name": { "type": "string", "example": "Le Gourmet" },
          "total_capacity": { "type": "integer", "example": 60 },
          "phone": { "type": "string", "example": "0102030405" },
          "address": { "type": "string", "example": "2 avenue de Lyon, 69000 Lyon" },
          "description": { "type": "string", "example": "Nouveau concept" }
        }
      },
      "MenuCategory": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "Entrées" },
          "description": { "type": "string", "example": "Nos délicieuses entrées" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        }
      },
      "MenuItemFormatted": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "category": { "type": "string", "example": "Entrées" },
          "name": { "type": "string", "example": "Salade César" },
          "description": { "type": "string", "example": "Salade verte, croûtons, parmesan, sauce César" },
          "price": { "type": "number", "format": "float", "example": 12.50 },
          "is_available": { "type": "boolean", "example": true },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        }
      },
      "MenuItem": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "category_id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "Salade César" },
          "description": { "type": "string", "example": "Salade verte, croûtons, parmesan, sauce César" },
          "price": { "type": "number", "format": "float", "example": 12.50 },
          "is_available": { "type": "boolean", "example": true },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "category": {
            "type": "object",
            "properties": {
              "id": { "type": "integer", "example": 1 },
              "name": { "type": "string", "example": "Entrées" }
            }
          }
        }
      },
      "CreateCategoryRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": { 
            "type": "string", 
            "maxLength": 100,
            "example": "Entrées" 
          },
          "description": { 
            "type": "string", 
            "example": "Nos délicieuses entrées pour commencer votre repas" 
          }
        }
      },
      "UpdateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": { 
            "type": "string", 
            "maxLength": 100,
            "example": "Entrées" 
          },
          "description": { 
            "type": "string", 
            "example": "Nos délicieuses entrées pour commencer votre repas" 
          },
          "is_active": { 
            "type": "boolean", 
            "example": true 
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Catégorie créée avec succès" },
          "category": { "$ref": "#/components/schemas/MenuCategory" }
        }
      },
      "CreateMenuItemRequest": {
        "type": "object",
        "required": ["category_id", "name", "price"],
        "properties": {
          "category_id": { "type": "integer", "example": 1 },
          "name": { 
            "type": "string", 
            "maxLength": 150,
            "example": "Salade César" 
          },
          "description": { 
            "type": "string", 
            "example": "Salade verte, croûtons, parmesan, sauce César maison" 
          },
          "price": { 
            "type": "number", 
            "format": "float", 
            "minimum": 0,
            "example": 12.50 
          },
          "is_available": { 
            "type": "boolean", 
            "example": true,
            "default": true
          }
        }
      },
      "UpdateMenuItemRequest": {
        "type": "object",
        "properties": {
          "category_id": { "type": "integer", "example": 1 },
          "name": { 
            "type": "string", 
            "maxLength": 150,
            "example": "Salade César" 
          },
          "description": { 
            "type": "string", 
            "example": "Salade verte, croûtons, parmesan, sauce César maison" 
          },
          "price": { 
            "type": "number", 
            "format": "float", 
            "minimum": 0,
            "example": 12.50 
          },
          "is_available": { 
            "type": "boolean", 
            "example": true 
          }
        }
      },
      "MenuItemResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Plat créé avec succès" },
          "item": { "$ref": "#/components/schemas/MenuItem" }
        }
      },
      "Timeslot": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "start_time": { "type": "string", "format": "time", "example": "19:30:00" },
          "is_active": { "type": "boolean", "example": true },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        }
      },
      "TimeslotAvailability": {
        "type": "object",
        "properties": {
          "time": { 
            "type": "string", 
            "format": "time",
            "example": "19:00",
            "description": "Heure du créneau au format HH:MM"
          },
          "total_places": { 
            "type": "integer", 
            "example": 25,
            "description": "Nombre total de places disponibles pour ce créneau"
          },
          "available_places": { 
            "type": "integer", 
            "example": 18,
            "description": "Nombre de places encore disponibles pour ce créneau"
          }
        }
      },
      "DayAvailability": {
        "type": "object",
        "properties": {
          "date": { 
            "type": "string", 
            "format": "date",
            "example": "2024-01-15",
            "description": "Date au format YYYY-MM-DD"
          },
          "display_date": { 
            "type": "string", 
            "example": "15/01/2024",
            "description": "Date formatée pour l'affichage (DD/MM/YYYY)"
          },
          "day_name": { 
            "type": "string", 
            "example": "Lundi",
            "description": "Nom du jour en français"
          },
          "timeslots": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TimeslotAvailability" },
            "description": "Liste des créneaux horaires avec leurs disponibilités"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}